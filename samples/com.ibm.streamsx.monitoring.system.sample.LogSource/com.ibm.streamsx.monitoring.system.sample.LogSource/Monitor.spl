//
// ****************************************************************************
// * Copyright (C) 2017, International Business Machines Corporation          *
// * All rights reserved.                                                     *
// ****************************************************************************
//

namespace com.ibm.streamsx.monitoring.system.sample.LogSource;

use com.ibm.streamsx.monitoring.system::LogSource;
use com.ibm.streamsx.monitoring.system::*;
use com.ibm.streamsx.monitoring.jmx::ConnectionNotification;

/**
 * This sample application demonstrates the usage of the LogSource operator and monitors log events
 *
 * @param applicationConfigurationName
 * Specifies the name of [https://www.ibm.com/support/knowledgecenter/en/SSCRJU_4.2.0/com.ibm.streams.admin.doc/doc/creating-secure-app-configs.html|application configuration object] that can contain domainId, connectionURL, user, password, and filterDocument properties. The application configuration overrides values that are specified with the corresponding parameters.
 *
 * @param user
 * Specifies the user that is required for the JMX connection. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.
 *
 * @param password
 * Specifies the password that is required for the JMX connection. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.
 *
 * @param connectionURL
 * Specifies the connection URL as returned by the `streamtool getjmxconnect` command. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.If not specified and the domainId parameter value equals the domain id under which this operator is running, then the operator uses the `streamtool getjmxconnect` command to get the value.
 *
 * @param sslOption
 * Specifies the sslOption that is required for the JMX connection. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value. If not specified and the domainId parameter value equals the domain id under which this operator is running, then the operator uses the `streamtool getdomainproperty` command to get the value.
 *
 */
public composite Monitor {
	param
		expression<rstring> $applicationConfigurationName: getSubmissionTimeValue("applicationConfigurationName", "monitoring"); // optional, if user and password are set
		expression<rstring> $user: getSubmissionTimeValue("user", ""); // optional, if set in application configuration
		expression<rstring> $password: getSubmissionTimeValue("password", ""); // optional, if set in application configuration
		expression<rstring> $connectionURL: getSubmissionTimeValue("connectionURL", ""); // optional, if not set, then domain settings are used, where the PE is running
		expression<rstring> $sslOption: getSubmissionTimeValue("sslOption", ""); // optional, if not set, then domain settings are used, where the PE is running

	graph

		/*
		 * The LogSource generates a tuple for each notified log event.
		 */
		(stream<LogNotification> Logs;
		 stream<ConnectionNotification> ConnectionNotifications // optional output port
		) = LogSource() {
			param
				applicationConfigurationName: $applicationConfigurationName;
				user: $user;
				password: $password;
				connectionURL: $connectionURL;
				sslOption: $sslOption;
		}
		
		/*
		 * The Custom traces the received notifications.
		 */
		() as EventsTracer = Custom(Logs as I; ConnectionNotifications as C) {
			logic
			onTuple I: {
				printStringLn((rstring)I);
			}
			onTuple C: {
				printStringLn("ConnectionNotification: " + (rstring)C);
			}
		}



}
