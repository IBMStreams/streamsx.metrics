<?xml version="1.0" encoding="UTF-8"?><operatorModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <javaOperatorModel>
    <!--Generated from com.ibm.streamsx.monitoring.JobStatusSource in impl/lib/com.ibm.streamsx.monitoring.jar at Mon Jul 31 17:30:08 CEST 2017-->
    <context>
      <description>The JobStatusSource operator uses the [http://www.ibm.com/support/knowledgecenter/SSCRJU_4.2.0/com.ibm.streams.ref.doc/doc/jmxapi.html|JMX] API to retrieve status updates from one or more jobs, and provides status changes as tuple stream.

As an application developer, you provide the so-called filter document. The filter document specifies patterns for domain, instance, job and operator names. It also specifies which name patterns are related, for example: For a domain X monitor all instances, whereas in each instance only jobs with a Y in their names shall be evaluated. For another domain Z, only jobs with a name ending with XYZ, are monitored, etc.

Per default, the JobStatusSource operator monitors neither any domain, nor any instances, nor job, nor any other Streams job-related object. Only those objects (and their parents) that match the specified filters, are monitored.

The JobStatusSource operator monitors filter-matching domains, instances, and jobs that are running while the application that uses the JobStatusSource operator, starts. Furthermore, the operator gets notifications for created and deleted instances, and submitted and cancelled jobs. Thererfore, the operator can retrieve events from filter-matching jobs that are submitted in the future.

+ Filter document

The filter document specifies patterns for domain, instance, job and operator names, and their relations.

It also specifies which name patterns are related, for example: For a domain X monitor all instances, whereas in each instance only jobs with a Y in their names shall be evaluated. For another domain Z, only jobs with a name ending with XYZ, are monitored, etc.

The filter document is a JSON-encoded text file that is configured with the **filterDocument** parameter.

If the **applicationConfigurationName** parameter is specified, the application configuration can override the **filterDocument** parameter value.
The JSON-formatted document specifies filters as regular expressions.
Each regular expression must follow the rules that are specified for Java [https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html|Pattern].

The following filter document example specifies to collect all PE status events in all jobs and instances:

    [
      {
        "domainIdPatterns":".*",
        "instances":
        [
          {
            "instanceIdPatterns":".*",
            "jobs":
            [
              {
                "jobNamePatterns":".*",
                "operators":
                [
                  {
                    "operatorNamePatterns":".*"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]

The following filter document example selects events from the *Storage* operator in the *StreamsInstance* instance and *StreamsDomain* domain only:

    [
      {
        "domainIdPatterns":"StreamsDomain",
        "instances":
        [
          {
            "instanceIdPatterns":"StreamsInstance",
            "jobs":
            [
              {
                "jobNamePatterns":".*",
                "operators":
                [
                  {
                    "operatorNamePatterns":"Storage",
                  }
                ]
              }
            ]
          }
        ]
      }
    ]

</description>
      <metrics/>
      <executionSettings>
        <className>com.ibm.streamsx.monitoring.JobStatusSource</className>
      </executionSettings>
      <libraryDependencies>
        <library>
          <cmn:description>Operator class library</cmn:description>
          <cmn:managedLibrary>
            <cmn:libPath>../../impl/lib/com.ibm.streamsx.monitoring.jar</cmn:libPath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
    </context>
    <parameters>
      <parameter>
        <name>applicationConfigurationName</name>
        <description>Specifies the name of [https://www.ibm.com/support/knowledgecenter/en/SSCRJU_4.2.0/com.ibm.streams.admin.doc/doc/creating-secure-app-configs.html|application configuration object] that can contain connectionURL, user, password, and filterDocument properties. The application configuration overrides values that are specified with the corresponding parameters.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>connectionURL</name>
        <description>Specifies the connection URL as returned by the `streamtool getjmxconnect` command. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>domainId</name>
        <description>Specifies the domain id that is monitored. If no domain id is specified, the domain id under which this operator is running is used. If the operator is running in a standalone application it raises an exception and aborts. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>filterDocument</name>
        <description>Specifies the path to a JSON-formatted document that specifies the domain, instance, job and operator filters as regular expressions. Each regular expression must follow the rules that are specified for Java [https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html|Pattern]. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>password</name>
        <description>Specifies the password that is required for the JMX connection. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>scanPeriod</name>
        <description>Specifies the period after which is checked if the application configuration is updated.The default is 5.0 seconds.</description>
        <optional>true</optional>
        <type>float64</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>sslOption</name>
        <description>Specifies the sslOption that is required for the JMX connection. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>user</name>
        <description>Specifies the user that is required for the JMX connection. If the **applicationConfigurationName** parameter is specified, the application configuration can override this parameter value.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts/>
    <outputPorts>
      <outputPortSet>
        <description>The JobStatusSource operator emits a status tuple to this output port for each notification, for which the operator identifies a changed value. You can use the [type:com.ibm.streamsx.monitoring.job::Notification|Notification] tuple type, or any subset of the attributes specified for this type</description>
        <windowPunctuationOutputMode>Generating</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
    </outputPorts>
  </javaOperatorModel>
</operatorModel>