<?xml version="1.0" encoding="UTF-8"?>
<info:toolkitInfoModel xmlns:common="http://www.ibm.com/xmlns/prod/streams/spl/common"
 xmlns:info="http://www.ibm.com/xmlns/prod/streams/spl/toolkitInfo">
	<info:identity>
		<info:name>com.ibm.streamsx.monitoring</info:name>
		<info:description><![CDATA[
The **com.ibm.streamsx.monitoring** provides capabilities to create applications that monitor IBM Streams and its applications.

The toolkit contains operators that uses the **JMX API** to monitor applications:
* **com.ibm.streamsx.monitoring.metrics::MetricsSource** retrieves metrics from one or more jobs and provides them as tuple stream.
* **com.ibm.streamsx.monitoring.jobs::JobStatusMonitor** receives notifications of PE status changes from one or more jobs and provides them as tuple stream.
* **com.ibm.streamsx.monitoring.system::LogSource** receives notifications of application error and warning logs and provides them as tuple stream.

IBM Streams supports standard and custom metrics that are assigned to operators
and operator ports in a Streams application, for example, the number of received
and sent tuples. These metrics can be monitored with the Streams console or
Streams Studio to identify whether a Streams application runs as expected or
whether it has some issues.

IBM Streams provides the
[http://www.ibm.com/support/knowledgecenter/en/SSCRJU_4.2.0/com.ibm.streams.toolkits.doc/spldoc/dita/tk$spl/op$spl.adapter$MetricsSink.html|spl.adapter::MetricsSink]
operator to set metrics values from within a Streams applications, and SPL
functions in the [http://www.ibm.com/support/knowledgecenter/en/SSCRJU_4.2.0/com.ibm.streams.toolkits.doc/spldoc/dita/tk$spl/ns$spl.utility.html|spl.utility]
namespace to create custom metrics, and to set and get metrics values:

* spl.utility::createCustomMetric
* spl.utility::getCustomMetricNames
* spl.utility::getCustomMetricValue
* spl.utility::getInputPortMetricValue
* spl.utility::getOutputPortMetricValue
* spl.utility::hasCustomMetric
* spl.utility::setCustomMetricValue

The functions are limited to the operator that owns a metric. An operator A
cannot access the metrics of an operator B.

If you want to monitor Streams or Streams applications with non-Streams
applications, you can use the following API:

* [http://www.ibm.com/support/knowledgecenter/SSCRJU_4.2.0/com.ibm.streams.ref.doc/doc/jmxapi.html|JMX]
* [http://www.ibm.com/support/knowledgecenter/SSCRJU_4.2.0/com.ibm.streams.restapi.doc/doc/restapis.html|REST]

The com.ibm.streamsx.monitoring toolkit completes this list of APIs with the
[com.ibm.streamsx.monitoring.metrics::MetricsSource] operator that uses the JMX API
to retrieve metrics from one or more jobs, and provides them as tuple stream.


+ Using the toolkit with IBM Streaming Analytics service

# Before you begin

Create an instance of [https://console.bluemix.net/docs/services/StreamingAnalytics/|IBM Streaming Analytics service].

# Create IBM Streaming Analytics service credentials

Use the following steps to create a service credential:

1. Log in to the IBM Cloud console and navigate to your instance of Streaming Analytics.
2. In the side navigation, click Service Credentials.
3. Click New credential and provide the necessary information.
4. Click Add to generate service credential.
5. Click View credentials and copy JSON into clipboard.
		
# Save Credentials in Application Configuration Property

Store IBM Streaming Analytics Credentials JSON in an application configuration property called `credentials`.
When the operator starts, it will look for that property and extract the information needed to connect.

The following steps outline how this can be done:

1. Create an application configuration, e.g. called `monitor`. You need to set the name with parameter `applicationConfigurationName`.
2. Create a property in the `monitor` application configuration *named* `credentials`. The *value* of the property should be the raw IBM Cloud Streaming Analytics Service Credentials JSON
3. The operator will look for an application configuration if the operator parameter `applicationConfigurationName` is set and will extract the information needed to connect.


+ Developing and running applications that use the com.ibm.streamsx.monitoring toolkit

To create applications that use the com.ibm.streamsx.monitoring toolkit, you must
configure either Streams Studio or the SPL compiler to be aware of the location
of the toolkit. 

# Before you begin

Install IBM Streams. Configure the product environment variables by entering the
following command:
 
    source <product-installation-root-directory>/4.1.0.0/bin/streamsprofile.sh

# About this task

After the location of the toolkit is communicated to the compiler, the SPL
artifacts that are specified in the toolkit can be used by an application.
The application can include a `use` directive to bring the necessary namespaces
into scope. Alternatively, you can fully qualify the operators that are provided
by toolkit with their namespaces as prefixes.

# Procedure

1. Configure the SPL compiler to find the toolkit root directory. Use one of the
  following methods:

  * Set the **STREAMS_SPLPATH** environment variable to the root directory of a
    toolkit or multiple toolkits (with : as a separator). For example:

      export STREAMS_SPLPATH=$HOME/toolkits/com.ibm.streamsx.monitoring

  * Specify the **-t** or **--spl-path** command parameter when you run the
    **sc** command. For example:

      sc -t $HOME/toolkits/com.ibm.streamsx.monitoring -M MyMain

    where MyMain is the name of the SPL main composite.

    **Note**: These command parameters override the **STREAMS_SPLPATH**
    environment variable.

  * Add the toolkit location in IBM Streams Studio.

2. Develop your application. To avoid the need to fully qualify the operators,
  add a use directive in your application. 

  * For example, you can add the following clause in your SPL source file:

      use com.ibm.streamsx.monitoring.metrics::*;

    You can also specify a use clause for individual operators by replacing the
    asterisk (\*) with the operator name. For example: 

      use com.ibm.streamsx.monitoring.metrics::MetricsSource;

3. Build your application. You can use the **sc** command or Streams Studio.  

4. Start the IBM Streams instance. 

5. Run the application. You can submit the application as a job by using the
  **streamtool submitjob** command or by using Streams Studio. 

		]]></info:description>
		<info:version>2.0.0.__dev__</info:version>
		<info:requiredProductVersion>4.1.0.0</info:requiredProductVersion>
	</info:identity>
	<info:dependencies/>
</info:toolkitInfoModel>
