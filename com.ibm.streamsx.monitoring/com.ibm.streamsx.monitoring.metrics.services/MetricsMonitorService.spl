//
// ****************************************************************************
// * Copyright (C) 2017, International Business Machines Corporation          *
// * All rights reserved.                                                     *
// ****************************************************************************
//

namespace com.ibm.streamsx.monitoring.metrics.services;

use com.ibm.streamsx.monitoring.metrics::MetricsMonitor;
use com.ibm.streamsx.monitoring.metrics::*;
use com.ibm.streamsx.topology.topic::Subscribe;
use com.ibm.streamsx.topology.topic::Publish;

/**
 * The MetricsMonitorService ingests metric tuples from the MetricsIngestService and 
 * monitors the metric values against the threshold rules defined in the application 
 * configuration's thresholdDocument property.
 * 
 * Once a threshold is violated, an alert message is sent out, containing the details 
 * on the current metric value, the threshold rule that Was triggered. It also includes 
 * more details on the metric (from the tuple).
 * 
 * This composite depends on the following toolkits:
 * * **com.ibm.streamsx.topology**
 *
 * **Published topic**
 *
 * * `streamsx/monitoring/metrics/alerts` - Alerts messages
 *    with stream type `com.ibm.streamsx.topology::String`.
 * * `streamsx/monitoring/metrics/alerts` - Alerts messages
 *    with stream type `com.ibm.streamsx.monitoring.metrics::Alert`.
 * 
 * 
 * @param thresholdsConfiguration
 * Name of application configuration containing thresholdDocument JSON.
 * If parameter is not set, then the thresholdDocument parameter must be set.
 * Defaults to `thresholds` and can be set using the submission parameter `thresholdsConfiguration`.
 * 
 * @param metricsTopic
 * The metricsTopic specifies which topic the MetricsIngestService is publishing to. If parameter is not set, then the topic name `streamsx/monitoring/metrics/values` is used.
 * 
 * @param metricsMonitorTopic
 * The metricsMonitorTopic specifies which topic this service (MetricsMonitorService) is publishing to. Defaults to `streamsx/monitoring/metrics/alerts`.
 */
public composite MetricsMonitorService
{
	param
		expression<rstring> $thresholdsConfiguration : getSubmissionTimeValue("thresholdsConfiguration", "thresholds");
		
		expression<rstring> $metricsTopic: getSubmissionTimeValue("metricsTopic", "streamsx/monitoring/metrics/values");
		expression<rstring> $metricsMonitorTopic : getSubmissionTimeValue("metricsMonitorTopic", "streamsx/monitoring/metrics/alerts");
		
	graph
		/**
		 * The Subscribe imports the metric tuples from the topic the MetricsIngestService 
		 * is publishing to.
		 */
		stream<Notification> NotificationMetrics = Subscribe() {
			param
				topic: $metricsTopic;
				streamType: Notification;
		}
		
		/**
		 * The MetricsMonitor compares the metric tuple's values against the threshold rules 
		 * defined in the application configuration's thresholdDocument property. It outputs 
		 * an alert whenever any threshold rules are violated.
		 */
		(stream<com.ibm.streamsx.topology::String> AlertStringMessage;
		stream<Alert> AlertTypeMessage) as ThresholdMonitor = MetricsMonitor(NotificationMetrics) {
			param
				applicationConfigurationName: $thresholdsConfiguration;
		}

		/**
		 * The Publish publishes the alert messsages as strings
		 */
		() as PublishAlertStrings = Publish(AlertStringMessage) {
			param
				 topic: $metricsMonitorTopic;
		}

		/**
		 * The Publish publishes the alert messsages with type Alert
		 */
		() as PublishAlerts = Publish(AlertTypeMessage) {
			param
				 topic: $metricsMonitorTopic;
		}

}



